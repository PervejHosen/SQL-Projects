drop database tourism;
CREATE OR replace DATABASE TOURISM;
USE DATABASE TOURISM;
CREATE OR replace SCHEMA EUROPE;
USE SCHEMA EUROPE;
CREATE OR replace TABLE AIRBNB(
    City varchar (10),
    Price NUMBER (10,7),
    DayType varchar(10),
    Room_Type varchar (15),
    Shared_Room BOOLEAN,
    Private_Room BOOLEAN,
    Person_Capacity NUMBER(10),
    Superhost BOOLEAN,
    Multiple_Rooms NUMBER (5),
    Business NUMBER(5),
    Cleanliness_Rating NUMBER (10),
    Guest_Satisfaction NUMBER (5),
    Bedrooms NUMBER (10),
    City_Center NUMBER (10,6),
    Metro_Distance NUMBER (10,6),
    Attraction_Index NUMBER (10,6),
    Normalised_Attraction_Index NUMBER (10,6),
    Restraunt_Index NUMBER (10,6),
    Normalised_Restraunt_Index NUMBER (10,6)
    );

select * from airbnb limit 5;
select count(*) from airbnb;---41238 obserbation


-------------Descriptive Analysis and Frequency Distribution----------

--Lets see Uniqe category of some variables/features.

SELECT DISTINCT CITY
FROM AIRBNB; ---Amsterdam,Athens,Barcelona,Berlin,Budapest,Lisbon,Paris,Vienna,Rome

SELECT DISTINCT ROOM_TYPE
FROM AIRBNB; --Private room,Entire home/apt,Shared room

SELECT DISTINCT person_capacity
FROM AIRBNB; ---2,3,4,5,6

SELECT DISTINCT cleanliness_rating
FROM AIRBNB; ---2 to 10

SELECT DISTINCT guest_satisfaction
FROM AIRBNB; --20 to 100 scale. 51 uniqe category

SELECT DISTINCT bedrooms
FROM AIRBNB; --0,1,2,3,4,5,9,10

--Lets see static of variables/features

with cte as(
(SELECT
  'PRICE' COLOUMN,
  MIN(PRICE) MIN,
  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY PRICE) "25th PERCENTILE",
  MEDIAN(PRICE) MEDIAN,
  PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY PRICE) "75th PERCENTILE",
  MAX(PRICE) MAX,
  AVG(PRICE) AVG,
  MODE(PRICE) MODE,
  STDDEV(PRICE) STD_DEV
FROM airbnb
GROUP BY COLOUMN)
UNION ALL 
(SELECT
  'PERSON_CAPACITY' COLOUMN,
  MIN(PERSON_CAPACITY) MIN,
  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY PERSON_CAPACITY) "25th PERCENTILE",
  MEDIAN(PERSON_CAPACITY) MEDIAN,
  PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY PERSON_CAPACITY) "75th PERCENTILE",
  MAX(PERSON_CAPACITY) MAX,
  AVG(PERSON_CAPACITY) AVG,
  MODE(PERSON_CAPACITY) MODE,
  STDDEV(PERSON_CAPACITY) STD_DEV
FROM airbnb
GROUP BY COLOUMN)
UNION ALL 
(SELECT
  'CLEANLINESS_RATING' COLOUMN,
  MIN(CLEANLINESS_RATING) MIN,
  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY CLEANLINESS_RATING) "25th PERCENTILE",
  MEDIAN(CLEANLINESS_RATING) MEDIAN,
  PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY CLEANLINESS_RATING) "75th PERCENTILE",
  MAX(CLEANLINESS_RATING) MAX,
  AVG(CLEANLINESS_RATING) AVG,
  MODE(CLEANLINESS_RATING) MODE,
  STDDEV(CLEANLINESS_RATING) STD_DEV
FROM airbnb
GROUP BY COLOUMN)
UNION ALL 
(SELECT
  'GUEST_SATISFACTION' COLOUMN,
  MIN(GUEST_SATISFACTION) MIN,
  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY GUEST_SATISFACTION) "25th PERCENTILE",
  MEDIAN(GUEST_SATISFACTION) MEDIAN,
  PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY GUEST_SATISFACTION) "75th PERCENTILE",
  MAX(GUEST_SATISFACTION) MAX,
  AVG(GUEST_SATISFACTION) AVG,
  MODE(GUEST_SATISFACTION) MODE,
  STDDEV(GUEST_SATISFACTION) STD_DEV
FROM airbnb
GROUP BY COLOUMN)
UNION ALL 
(SELECT
  'BEDROOMS' COLOUMN,
  MIN(BEDROOMS) MIN,
  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY BEDROOMS) "25th PERCENTILE",
  MEDIAN(BEDROOMS) MEDIAN,
  PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY BEDROOMS) "75th PERCENTILE",
  MAX(BEDROOMS) MAX,
  AVG(BEDROOMS) AVG,
  MODE(BEDROOMS) MODE,
  STDDEV(BEDROOMS) STD_DEV
FROM airbnb
GROUP BY COLOUMN)
UNION ALL 
(SELECT
  'CITY_CENTER' COLOUMN,
  MIN(CITY_CENTER) MIN,
  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY CITY_CENTER) "25th PERCENTILE",
  MEDIAN(CITY_CENTER) MEDIAN,
  PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY CITY_CENTER) "75th PERCENTILE",
  MAX(CITY_CENTER) MAX,
  AVG(CITY_CENTER) AVG,
  MODE(CITY_CENTER) MODE,
  STDDEV(CITY_CENTER) STD_DEV
FROM airbnb
GROUP BY COLOUMN)
UNION ALL 
(SELECT
  'METRO_DISTANCE' COLOUMN,
  MIN(METRO_DISTANCE) MIN,
  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY METRO_DISTANCE) "25th PERCENTILE",
  MEDIAN(METRO_DISTANCE) MEDIAN,
  PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY METRO_DISTANCE) "75th PERCENTILE",
  MAX(METRO_DISTANCE) MAX,
  AVG(METRO_DISTANCE) AVG,
  MODE(METRO_DISTANCE) MODE,
  STDDEV(METRO_DISTANCE) STD_DEV
FROM airbnb
GROUP BY COLOUMN)
UNION ALL 
(SELECT
  'ATTRACTION_INDEX' COLOUMN,
  MIN(ATTRACTION_INDEX) MIN,
  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY ATTRACTION_INDEX) "25th PERCENTILE",
  MEDIAN(ATTRACTION_INDEX) MEDIAN,
  PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY ATTRACTION_INDEX) "75th PERCENTILE",
  MAX(ATTRACTION_INDEX) MAX,
  AVG(ATTRACTION_INDEX) AVG,
  MODE(ATTRACTION_INDEX) MODE,
  STDDEV(ATTRACTION_INDEX) STD_DEV
FROM airbnb
GROUP BY COLOUMN)
UNION ALL 
(SELECT
  'NORMALISED_ATTRACTION_INDEX' COLOUMN,
  MIN(NORMALISED_ATTRACTION_INDEX) MIN,
  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY NORMALISED_ATTRACTION_INDEX) "25th PERCENTILE",
  MEDIAN(NORMALISED_ATTRACTION_INDEX) MEDIAN,
  PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY NORMALISED_ATTRACTION_INDEX) "75th PERCENTILE",
  MAX(NORMALISED_ATTRACTION_INDEX) MAX,
  AVG(NORMALISED_ATTRACTION_INDEX) AVG,
  MODE(NORMALISED_ATTRACTION_INDEX) MODE,
  STDDEV(NORMALISED_ATTRACTION_INDEX) STD_DEV
FROM airbnb
GROUP BY COLOUMN)
UNION ALL 
(SELECT
  'RESTRAUNT_INDEX' COLOUMN,
  MIN(RESTRAUNT_INDEX) MIN,
  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY RESTRAUNT_INDEX) "25th PERCENTILE",
  MEDIAN(RESTRAUNT_INDEX) MEDIAN,
  PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY RESTRAUNT_INDEX) "75th PERCENTILE",
  MAX(RESTRAUNT_INDEX) MAX,
  AVG(RESTRAUNT_INDEX) AVG,
  MODE(RESTRAUNT_INDEX) MODE,
  STDDEV(RESTRAUNT_INDEX) STD_DEV
FROM airbnb
GROUP BY COLOUMN)
UNION ALL 
(SELECT
  'NORMALISED_RESTRAUNT_INDEX' COLOUMN,
  MIN(NORMALISED_RESTRAUNT_INDEX) MIN,
  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY NORMALISED_RESTRAUNT_INDEX) "25th PERCENTILE",
  MEDIAN(NORMALISED_RESTRAUNT_INDEX) MEDIAN,
  PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY NORMALISED_RESTRAUNT_INDEX) "75th PERCENTILE",
  MAX(NORMALISED_RESTRAUNT_INDEX) MAX,
  AVG(NORMALISED_RESTRAUNT_INDEX) AVG,
  MODE(NORMALISED_RESTRAUNT_INDEX) MODE,
  STDDEV(NORMALISED_RESTRAUNT_INDEX) STD_DEV
FROM airbnb
GROUP BY COLOUMN)
)
select * from cte;

-------------------------------------------------------------------------

--lets see city wise total observations

select city,
    count(city) as total_observation
from airbnb
group by 1
order by 2 DESC; --ROME HAS THE HIGHEST OBSERBATION(9004), AMSTERDAM HAS LEAST (1875)

--Lets see city wise min,max,avg of price

select city,
round(min(price),0) as minimum_house_price, --35
round(max(price),0) as maximum_house_price, --999
round(avg(price),0) as avrrage_house_price  --243
from airbnb
group by 1
order by 2 desc;

---FIVE NUMBER SUMMARY AND INTER-QUARTILE RANGES (IQR)

WITH FIVE_NUMBER_SUMMARY AS
(SELECT 
min(price) AS MIN_price,
PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY price) AS Q1,
PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY price) AS MEDIAN,
PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY price) AS Q3,
max(price) AS MAX_ORDER_VALUE,
(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY price)-PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY price)) AS IQR
FROM airbnb)

SELECT (Q1-1.5*IQR) AS LOWER_HINGE, (Q3+1.5*IQR) AS UPPER_HINGE
FROM FIVE_NUMBER_SUMMARY AS F; --UPPER HINGE: 513.70055

----FINDING OUTLIERS

WITH FIVE_NUMBER_SUMMARY AS
(SELECT 
MIN(price) AS MIN_price,
PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY price) AS Q1,
PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY price) AS MEDIAN,
PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY price) AS Q3,
MAX(price) AS MAX_price,
(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY price)-PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY price)) AS IQR
FROM airbnb),
HINGES AS
(SELECT (Q1-1.5*IQR) AS LOWER_HINGE, (Q3+1.5*IQR) AS UPPER_HINGE
FROM FIVE_NUMBER_SUMMARY AS F)

SELECT price FROM airbnb
WHERE price > (SELECT UPPER_HINGE FROM HINGES); --- there is 2.6k row of upper hinge outliers exist

---Normaly Distribute of data by removing outliers

WITH FIVE_NUMBER_SUMMARY AS
(SELECT 
MIN(price) AS MIN_price,
PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY price) AS Q1,
PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY price) AS MEDIAN,
PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY price) AS Q3,
MAX(price) AS MAX_price,
(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY price)-PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY price)) AS IQR
FROM airbnb),
HINGES AS
(SELECT (Q1-1.5*IQR) AS LOWER_HINGE, (Q3+1.5*IQR) AS UPPER_HINGE
FROM FIVE_NUMBER_SUMMARY AS F)
SELECT price FROM airbnb
WHERE price > (SELECT LOWER_HINGE FROM HINGES) AND price < (SELECT UPPER_HINGE FROM HINGES);

---Finding Correlation of Guest Satisfiction with other variables

WITH CTE AS
(
(SELECT 'PRICE' Feature_1, 'GUEST_SATISFACTION' Feature_2, CORR(PRICE,GUEST_SATISFACTION) CORR
FROM AIRBNB) 
UNION ALL(
SELECT 'PERSON_CAPACITY' Feature_1, 'GUEST_SATISFACTION' Feature_2, CORR(PERSON_CAPACITY,GUEST_SATISFACTION) CORR
FROM AIRBNB) 
UNION ALL(
SELECT 'CLEANLINESS_RATING' Feature_1, 'GUEST_SATISFACTION' Feature_2, CORR(CLEANLINESS_RATING,GUEST_SATISFACTION) CORR
FROM AIRBNB) 
UNION ALL(
SELECT 'BEDROOMS' Feature_1, 'GUEST_SATISFACTION' Feature_2, CORR(BEDROOMS,GUEST_SATISFACTION) CORR
FROM AIRBNB) 
UNION ALL(
SELECT 'CITY_CENTER' Feature_1, 'GUEST_SATISFACTION' Feature_2, CORR(CITY_CENTER,GUEST_SATISFACTION) CORR
FROM AIRBNB) 
UNION ALL
(SELECT 'METRO_DISTANCE' Feature_1, 'GUEST_SATISFACTION' Feature_2, CORR(METRO_DISTANCE,GUEST_SATISFACTION) CORR
FROM AIRBNB) 
UNION ALL
(SELECT 'ATTRACTION_INDEX' Feature_1, 'GUEST_SATISFACTION' Feature_2, CORR(ATTRACTION_INDEX,GUEST_SATISFACTION) CORR
FROM AIRBNB) 
UNION ALL
(SELECT 'NORMALISED_ATTRACTION_INDEX' Feature_1, 'GUEST_SATISFACTION' Feature_2, CORR(NORMALISED_ATTRACTION_INDEX,GUEST_SATISFACTION) CORR
FROM AIRBNB) 
UNION ALL
(SELECT 'RESTRAUNT_INDEX' Feature_1, 'GUEST_SATISFACTION' Feature_2, CORR(RESTRAUNT_INDEX,GUEST_SATISFACTION) CORR
FROM AIRBNB) 
UNION ALL
(SELECT 'NORMALISED_RESTRAUNT_INDEX'Feature_1, 'GUEST_SATISFACTION' Feature_2, CORR(NORMALISED_RESTRAUNT_INDEX,GUEST_SATISFACTION) CORR
FROM AIRBNB))
SELECT * FROM CTE; --highest correlations are between Cleanliness_rating and  Guest_Satisfaction (0.6921501012)

